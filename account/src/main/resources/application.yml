server:
  port: 8080

spring:
  application:
    name: account-service
  profiles:
    active: prod
  datasource:
    url: jdbc:mysql://account-database:3306/account?useSSL=false&allowPublicKeyRetrieval=true
    username: "root"
    password: "0000"
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
  flyway: # This is for the database migration
    enabled: true
    baseline-version: 1.0.0
    baseline-on-migrate: true
    validate-on-migrate: true
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    default-schema: account
  config:
    import: optional:configserver:http://config:8071
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readinessstate:
      enabled: true
    livenessstate:
      enabled: true
  endpoint: # This is for the /actuator/shutdown endpoint
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info: # This is for the /actuator/info endpoint
    env:
      enabled: true

endpoints: # Enable the /actuator/shutdown endpoint
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://eureka-server:8070/eureka/

info: # This is for the /actuator/info endpoint to be seen in eureka dashboard
  app:
    name: "account"
    description: "Account Service for Bank Application"
    version: "1.0.0"

logging:
  level:
    com:
      tingshulien:
        account: DEBUG

resilience4j: # https://resilience4j.readme.io/docs/getting-started-3#configuration
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 2
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 500
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        ignore-exceptions:
          - java.lang.NullPointerException
    instances:
      fetch-customer-detail:
        maxAttempts: 2
        waitDuration: 500
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 3
        ignore-exceptions:
          - java.lang.NullPointerException
  ratelimiter:
    configs:
      default:
        limitForPeriod: 1000
        limitRefreshPeriod: 1000
        timeoutDuration: 1000
    instances:
      fetch-customer-detail:
        limitForPeriod: 1
        limitRefreshPeriod: 1000
        timeoutDuration: 500
